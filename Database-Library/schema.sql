-- MySQL Script generated by MySQL Workbench
-- Sun Jun  4 20:40:05 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Users` (
  `User_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Username` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `Date_of_birth` DATE NOT NULL,
  `Full_name` VARCHAR(45) NOT NULL,
  `Creation_date` DATE NULL DEFAULT CURRENT_DATE,
  `Email` VARCHAR(45) NULL,
  PRIMARY KEY (`User_id`),
  UNIQUE INDEX `username_UNIQUE` (`Username` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Administrator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Administrator` (
  `User_id` INT UNSIGNED NOT NULL,
  `Last_backup` DATE NULL,
  PRIMARY KEY (`User_id`),
  INDEX `fk_Administrator_User1_idx` (`User_id` ASC) VISIBLE,
  CONSTRAINT `fk_User_id1`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`Users` (`User_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`School_Dep`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`School_Dep` (
  `School_id` INT UNSIGNED NULL AUTO_INCREMENT,
  `Address` VARCHAR(45) NOT NULL,
  `City` VARCHAR(45) NOT NULL,
  `Phone_number` VARCHAR(45) NULL,
  `Email` VARCHAR(45) NULL,
  `Director_name` VARCHAR(45) NULL,
  PRIMARY KEY (`School_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`School_Lib_Op`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`School_Lib_Op` (
  `User_id` INT UNSIGNED NOT NULL,
  `School_id` INT UNSIGNED NOT NULL,
  `Approved_by` INT UNSIGNED NULL,
  `Pending_Res_Req` INT UNSIGNED NULL DEFAULT 0,
  `Pending_Rev_Req` INT NULL DEFAULT 0,
  PRIMARY KEY (`User_id`),
  INDEX `fk_School Library Operator_User1_idx` (`User_id` ASC) VISIBLE,
  INDEX `fk_School_Lib_Op_School_Dep1_idx` (`School_id` ASC) VISIBLE,
  INDEX `fk_School_Lib_Op_Administrator1_idx` (`Approved_by` ASC) VISIBLE,
  CONSTRAINT `fk_User_id2`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`Users` (`User_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_School_id1`
    FOREIGN KEY (`School_id`)
    REFERENCES `mydb`.`School_Dep` (`School_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Approved_by`
    FOREIGN KEY (`Approved_by`)
    REFERENCES `mydb`.`Administrator` (`User_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Basic_Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Basic_Users` (
  `User_id` INT UNSIGNED NOT NULL,
  `School_id` INT UNSIGNED NOT NULL,
  `Approved_by` INT UNSIGNED NULL,
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`User_id`),
  INDEX `fk_Weak_User_School_Dep1_idx` (`School_id` ASC) VISIBLE,
  INDEX `fk_Basic Users_School_Lib_Op1_idx` (`Approved_by` ASC) VISIBLE,
  CONSTRAINT `fk_School_id`
    FOREIGN KEY (`School_id`)
    REFERENCES `mydb`.`School_Dep` (`School_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_User_id3`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`Users` (`User_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Approved_by1`
    FOREIGN KEY (`Approved_by`)
    REFERENCES `mydb`.`School_Lib_Op` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`School_Library`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`School_Library` (
  `Library_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `School_id` INT UNSIGNED NOT NULL,
  `Operator_id` INT UNSIGNED NULL,
  `Total_books` INT UNSIGNED NOT NULL DEFAULT 0,
  `Current_borrows` INT UNSIGNED NULL DEFAULT 0,
  PRIMARY KEY (`Library_id`),
  INDEX `fk_School_Lib_School_Dep1_idx` (`School_id` ASC) VISIBLE,
  INDEX `fk_School_Library_School_Lib_Op1_idx` (`Operator_id` ASC) VISIBLE,
  CONSTRAINT `fk_School_id2`
    FOREIGN KEY (`School_id`)
    REFERENCES `mydb`.`School_Dep` (`School_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Operator_id`
    FOREIGN KEY (`Operator_id`)
    REFERENCES `mydb`.`School_Lib_Op` (`User_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Books` (
  `ISBN` VARCHAR(45) NOT NULL,
  `Library_id` INT UNSIGNED NOT NULL,
  `Title` VARCHAR(100) NOT NULL,
  `Publisher` VARCHAR(45) NOT NULL,
  `Publication_date` DATE NOT NULL,
  `Summary` MEDIUMTEXT NOT NULL,
  `Total_copies` INT NOT NULL,
  `Page_count` INT UNSIGNED NULL,
  `Image` MEDIUMTEXT NULL,
  `Language` VARCHAR(45) NULL,
  `Keywords` VARCHAR(60) NULL,
  `Available_copies` INT UNSIGNED NULL,
  PRIMARY KEY (`ISBN`, `Library_id`),
  INDEX `fk_Books_School_Library1_idx` (`Library_id` ASC) VISIBLE,
  CONSTRAINT `fk_Books_School_Library1`
    FOREIGN KEY (`Library_id`)
    REFERENCES `mydb`.`School_Library` (`Library_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Book_copies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Book_copies` (
  `Book_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Status` VARCHAR(45) NULL DEFAULT 'AVAILABLE',
  `ISBN` VARCHAR(45) NOT NULL,
  `Library_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Book_id`, `ISBN`, `Library_id`),
  INDEX `fk_Book_copies_Books1_idx` (`ISBN` ASC, `Library_id` ASC) VISIBLE,
  UNIQUE INDEX `Book_id_UNIQUE` (`Book_id` ASC) VISIBLE,
  CONSTRAINT `fk_Book_copies_Books1`
    FOREIGN KEY (`ISBN` , `Library_id`)
    REFERENCES `mydb`.`Books` (`ISBN` , `Library_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Reservations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Reservations` (
  `Reservation_id` INT UNSIGNED NULL AUTO_INCREMENT,
  `Reservation_date` DATE NOT NULL DEFAULT CURRENT_DATE,
  `Pickup_date` DATE NULL,
  `User_id` INT UNSIGNED NOT NULL,
  `Book_id` INT UNSIGNED NOT NULL,
  `Status` VARCHAR(45) NULL DEFAULT 'PENDING',
  PRIMARY KEY (`Reservation_id`),
  INDEX `fk_Reservations_Basic Users1_idx` (`User_id` ASC) VISIBLE,
  INDEX `fk_Reservations_Book_copies2_idx` (`Book_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_id6`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`Basic_Users` (`User_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Reservations_Book_copies2`
    FOREIGN KEY (`Book_id`)
    REFERENCES `mydb`.`Book_copies` (`Book_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Borrows`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Borrows` (
  `Borrow_id` INT UNSIGNED NULL AUTO_INCREMENT,
  `Borrow_date` DATE NOT NULL DEFAULT CURRENT_DATE,
  `Return_date` DATE NULL,
  `User_id` INT UNSIGNED NOT NULL,
  `Book_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Borrow_id`),
  INDEX `fk_Borrows_Basic Users1_idx` (`User_id` ASC) VISIBLE,
  INDEX `fk_Borrows_Book_copies1_idx` (`Book_id` ASC) VISIBLE,
  CONSTRAINT `fk_User_id5`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`Basic_Users` (`User_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Borrows_Book_copies1`
    FOREIGN KEY (`Book_id`)
    REFERENCES `mydb`.`Book_copies` (`Book_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Reviews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Reviews` (
  `Review_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ISBN` VARCHAR(45) NOT NULL,
  `User_id` INT UNSIGNED NOT NULL,
  `Review_date` DATE NOT NULL DEFAULT CURRENT_DATE,
  `Score` DOUBLE NOT NULL,
  `Status` VARCHAR(45) NULL DEFAULT 'PENDING',
  `Text` MEDIUMTEXT NULL,
  PRIMARY KEY (`Review_id`),
  INDEX `fk_Reviews_Basic Users1_idx` (`User_id` ASC) VISIBLE,
  INDEX `fk_Reviews_Books1_idx` (`ISBN` ASC) VISIBLE,
  CONSTRAINT `fk_User_id4`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`Basic_Users` (`User_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Reviews_Books1`
    FOREIGN KEY (`ISBN`)
    REFERENCES `mydb`.`Books` (`ISBN`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Authors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Authors` (
  `Author_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ISBN` VARCHAR(45) NOT NULL,
  `Author_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Author_id`, `ISBN`),
  INDEX `fk_Authors_Books1_idx` (`ISBN` ASC) VISIBLE,
  CONSTRAINT `fk_Authors_Books1`
    FOREIGN KEY (`ISBN`)
    REFERENCES `mydb`.`Books` (`ISBN`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Categories` (
  `Category_name` VARCHAR(45) NOT NULL,
  `ISBN` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Category_name`, `ISBN`),
  INDEX `fk_Categories_Books1_idx` (`ISBN` ASC) VISIBLE,
  CONSTRAINT `fk_Categories_Books1`
    FOREIGN KEY (`ISBN`)
    REFERENCES `mydb`.`Books` (`ISBN`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Book_locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Book_locations` (
  `Book_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ISBN` VARCHAR(45) NOT NULL,
  `Library_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Book_id`, `ISBN`, `Library_id`),
  INDEX `fk_Book_ids_Books1_idx` (`ISBN` ASC) VISIBLE,
  INDEX `fk_Individual_Books_School_Library1_idx` (`Library_id` ASC) VISIBLE,
  CONSTRAINT `fk_Book_ids_Books1`
    FOREIGN KEY (`ISBN`)
    REFERENCES `mydb`.`Books` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Individual_Books_School_Library1`
    FOREIGN KEY (`Library_id`)
    REFERENCES `mydb`.`School_Library` (`Library_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `mydb` ;

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `mydb`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view1`;
USE `mydb`;

USE `mydb`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Books_AFTER_INSERT` AFTER INSERT ON `Books` FOR EACH ROW
BEGIN
DECLARE copies INT;
SET copies = NEW.Total_copies;
    
	UPDATE School_Library
	SET Total_books = Total_books + NEW.Total_copies
	WHERE Library_id  = NEW.Library_id;
    
    REPEAT
		INSERT INTO Book_copies (ISBN,Library_id) VALUES (NEW.ISBN,NEW.Library_id);
		SET copies = copies - 1;
		UNTIL copies = 0 END REPEAT;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Books_AFTER_UPDATE` AFTER UPDATE ON `Books` FOR EACH ROW
BEGIN
DECLARE copies_dif INT;
SET copies_dif = NEW.Total_copies - OLD.Total_copies;

	IF copies_dif > 0 THEN 
		REPEAT
			INSERT INTO Book_copies (ISBN,Library_id) VALUES (NEW.ISBN,NEW.Library_id);
			SET copies_dif = copies_dif - 1;
			UNTIL copies_dif = 0 END REPEAT;
	END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Books_AFTER_DELETE` AFTER DELETE ON `Books` FOR EACH ROW
BEGIN
UPDATE School_Library
SET Total_books = Total_books - 1
WHERE Library_id  = old.Library_id;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Book_copies_BEFORE_DELETE` BEFORE DELETE ON `Book_copies` FOR EACH ROW
BEGIN
	UPDATE Books
	SET Total_copies = Total_copies - 1
	WHERE Library_id = OLD.Library_id AND ISBN = OLD.ISBN; 
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Reservations_AFTER_INSERT` AFTER INSERT ON `Reservations` FOR EACH ROW
BEGIN
IF NEW.Status = 'PENDING' THEN
	UPDATE School_Lib_op
		SET Pending_Res_Req = Pending_Res_Req + 1
        WHERE School_id = (SELECT School_id FROM School_Library WHERE Library_id = (SELECT Library_id FROM Book_copies WHERE Book_id = NEW.Book_id));
END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Reservations_AFTER_UPDATE` AFTER UPDATE ON `Reservations` FOR EACH ROW
BEGIN
IF NEW.Status != 'PENDING' AND OLD.Status = 'PENDING' THEN
	UPDATE School_Lib_op
		SET Pending_Res_Req = Pending_Res_Req + 1
        WHERE School_id = (SELECT School_id FROM School_Library WHERE Library_id = (SELECT Library_id FROM Book_copies WHERE Book_id = NEW.Book_id));
END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Borrows_AFTER_INSERT` AFTER INSERT ON `Borrows` FOR EACH ROW
BEGIN
IF NEW.Return_date = NULL THEN

	UPDATE Book_copies
		SET Status = 'BORROWED'
		WHERE Book_id = NEW.Book_id;

	UPDATE Books
		SET Available_copies = Available_copies - 1
		WHERE ISBN = (SELECT ISBN FROM Books WHERE Book_id = NEW.Book_id);

        
END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Borrows_BEFORE_UPDATE` BEFORE UPDATE ON `Borrows` FOR EACH ROW
BEGIN
IF OLD.Return_date = NULL AND NEW.Return_date != NULL THEN
	
    UPDATE Book_copies
		SET Status = 'AVAILABLE'
		WHERE Book_id = NEW.Book_id;

	UPDATE Books
		SET Available_copies = Available_copies + 1
		WHERE ISBN = (SELECT ISBN FROM Books WHERE Book_id = NEW.Book_id);
        
			
END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Reviews_AFTER_INSERT` AFTER INSERT ON `Reviews` FOR EACH ROW
BEGIN
IF NEW.Status = 'PENDING' THEN
	UPDATE School_Lib_Op
		SET Pending_Rev_Req = Pending_Rev_Req + 1;
END IF;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Reviews_AFTER_UPDATE` AFTER UPDATE ON `Reviews` FOR EACH ROW
BEGIN
IF OLD.Status = 'PENDING' AND NEW.Status != 'PENDING' THEN
	UPDATE School_Lib_Op
		SET Pending_Rev_Req = Pending_Rev_Req - 1;
END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
